{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ejy92\\\\Coding\\\\SDUI\\\\Venv\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport ComponentMap from './ComponentMap.js';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [UIschema, setUIschema] = useState(null);\n  const [components, setComponents] = useState([]);\n  const [selectedProductIds, setSelectedProductIds] = useState([]);\n  useEffect(() => {\n    // fetch UI schema\n    fetch('http://127.0.0.1:5000/schema/').then(response => response.json()).then(json => setUIschema(json)).catch(err => console.error('Error fetching schema:', err));\n\n    // fetch data (products, customers, orders)\n    fetch('http://127.0.0.1:5000/data/').then(response => response.json()).then(json => {\n      setComponents(json.components);\n    }).catch(err => console.error('Error fetching data', err));\n  }, []);\n  const renderPage = page => {\n    const ly = page.layout;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: ly.display,\n        gridTemplateRows: ly.gridRows,\n        gridTemplateColumns: ly.gridColumns,\n        gridTemplateAreas: `\"${ly.gridAreas.join('\" \"')}\"`\n      },\n      children: ly.components.map((component, index) => {\n        var _components$find;\n        const HTMLTag = component.gridArea || 'div';\n        const ComponentToRender = ComponentMap[component.component_type];\n        return /*#__PURE__*/React.createElement(HTMLTag, {\n          key: index,\n          style: {\n            backgroundColor: component.color,\n            gridArea: component.gridArea\n          }\n        }, /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            style: {\n              marginLeft: '30px'\n            },\n            children: component.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), ComponentToRender ? /*#__PURE__*/_jsxDEV(ComponentToRender, {\n            pageSchema: UIschema.pages[0],\n            data: ((_components$find = components.find(c => c.component === component.component_type)) === null || _components$find === void 0 ? void 0 : _components$find.data) || [],\n            onProductClick: productClicked,\n            onSubmit: submitOrder // for now\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              marginLeft: '30px'\n            },\n            children: [\"Unsupported component type: \", component.component_type]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true));\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  };\n\n  // flips only selected value -> returns updated product as JSON\n  const productClicked = productId => {\n    fetch(`http://127.0.0.1:5000/data/products/${productId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }).then(response => response.json()).then(updatedProduct => {\n      // receive updated product in React\n      setComponents(prev =>\n      // React re-renders after update\n      prev.map(component => component.component === 'products' ? {\n        ...component,\n        data: component.data.map(p => p.id === updatedProduct.id ? updatedProduct : p)\n      } : component));\n      setSelectedProductIds(prev => prev.includes(productId) ? prev.filter(id => id !== productId) : [...prev, productId]);\n    }).catch(err => console.error('Error updating product', err));\n  };\n  const submitOrder = () => {\n    fetch('http://127.0.0.1:5000/data/assign/', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors',\n      body: JSON.stringify({\n        customer_id: 1,\n        product_ids: selectedProductIds\n      })\n    }).then(response => response.json()).then(data => {\n      console.log(\"Order created:\", data);\n\n      // reset selected products when order is created\n      setSelectedProductIds([]);\n      setComponents(prev => prev.map(component => component.component === 'products' ? {\n        ...component,\n        data: component.data.map(product => ({\n          ...product,\n          selected: false\n        }))\n      } : component));\n    }).catch(err => console.error(err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: UIschema ? renderPage(UIschema.pages[0]) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AADOTyqBvyCQcqE7CHrExxbhR00=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["ComponentMap","React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","UIschema","setUIschema","components","setComponents","selectedProductIds","setSelectedProductIds","fetch","then","response","json","catch","err","console","error","renderPage","page","ly","layout","style","height","display","gridTemplateRows","gridRows","gridTemplateColumns","gridColumns","gridTemplateAreas","gridAreas","join","children","map","component","index","_components$find","HTMLTag","gridArea","ComponentToRender","component_type","createElement","key","backgroundColor","color","marginLeft","title","fileName","_jsxFileName","lineNumber","columnNumber","pageSchema","pages","data","find","c","onProductClick","productClicked","onSubmit","submitOrder","productId","method","headers","mode","updatedProduct","prev","p","id","includes","filter","body","JSON","stringify","customer_id","product_ids","log","product","selected","_c","$RefreshReg$"],"sources":["C:/Users/ejy92/Coding/SDUI/Venv/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport ComponentMap from './ComponentMap.js';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [UIschema, setUIschema] = useState(null);\n  const [components, setComponents] = useState([]);\n  const [selectedProductIds, setSelectedProductIds] = useState([]);\n  \n  useEffect(() => {\n    // fetch UI schema\n    fetch('http://127.0.0.1:5000/schema/')\n    .then(response => response.json())\n    .then(json => setUIschema(json))\n    .catch(err => console.error('Error fetching schema:', err));\n\n    // fetch data (products, customers, orders)\n    fetch('http://127.0.0.1:5000/data/')\n      .then(response => response.json())\n      .then(json => {\n        setComponents(json.components);\n      })\n      .catch(err => console.error('Error fetching data', err));\n  }, []);\n\n  const renderPage = (page) => {\n    const ly = page.layout;\n    return (\n      <div style={{ \n        height: '100vh', \n        display: ly.display, \n        gridTemplateRows: ly.gridRows, \n        gridTemplateColumns: ly.gridColumns, \n        gridTemplateAreas: `\"${ly.gridAreas.join('\" \"')}\"`\n        }}>\n        {ly.components.map((component, index) => {\n          const HTMLTag =  component.gridArea || 'div';\n          const ComponentToRender = ComponentMap[component.component_type];\n          return React.createElement\n            (\n              HTMLTag, \n              {key: index, \n               style: {backgroundColor: component.color, gridArea: component.gridArea}},\n               <>\n                <h2 style={{ marginLeft: '30px'}}>{component.title}</h2>\n                {/* {component.component_type === 'products' && renderComponent(component)} */}\n                {ComponentToRender ? (\n                <ComponentToRender\n                  pageSchema={UIschema.pages[0]}\n                  data={components.find(c => c.component === component.component_type)?.data || []}\n                  onProductClick={productClicked} \n                  onSubmit={submitOrder}// for now\n                />\n              ) : (\n                <p style={{ marginLeft: '30px' }}>Unsupported component type: {component.component_type}</p>\n              )}\n               </>\n            ); \n        })}\n      </div>\n    )\n\n  }\n\n  // flips only selected value -> returns updated product as JSON\n  const productClicked = (productId) => {\n    fetch(`http://127.0.0.1:5000/data/products/${productId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type': 'application/json'}, \n      mode: 'cors'})\n      .then(response => response.json())\n      .then(updatedProduct => { // receive updated product in React\n        setComponents(prev => // React re-renders after update\n          prev.map(component =>\n            component.component === 'products' ? {\n              ...component, data: component.data.map(p =>\n                p.id === updatedProduct.id ? updatedProduct : p\n              )\n            } : component\n          )\n        );\n\n        setSelectedProductIds(prev => \n          prev.includes(productId) ? prev.filter(id => id !== productId) : [...prev, productId]\n        );\n      })\n      .catch(err => console.error('Error updating product', err));\n  }\n\n  const submitOrder = () => {\n    fetch('http://127.0.0.1:5000/data/assign/', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      mode: 'cors',\n      body: JSON.stringify({\n        customer_id: 1,\n        product_ids: selectedProductIds\n      })\n    })\n      .then(response => response.json())\n      .then(data => {\n        console.log(\"Order created:\", data);\n\n        // reset selected products when order is created\n        setSelectedProductIds([]);\n        setComponents(prev =>\n          prev.map(component =>\n            component.component === 'products'\n              ? {\n                  ...component,\n                  data: component.data.map(product => ({\n                    ...product,          \n                    selected: false     \n                  }))\n                } : component\n        ));\n      })\n      .catch(err => console.error(err));\n  }\n\n  return (\n    <div>\n      <div>{UIschema? renderPage(UIschema.pages[0]) : <p>Loading...</p>}</div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}