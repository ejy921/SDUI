{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ejy92\\\\Coding\\\\SDUI\\\\Venv\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [UIschema, setUIschema] = useState(null);\n  const [components, setComponents] = useState([]);\n  useEffect(() => {\n    // fetch UI schema\n    fetch('http://127.0.0.1:5000/schema/').then(response => response.json()).then(json => setUIschema(json));\n\n    // fetch data (products, customers, orders)\n    fetch('http://127.0.0.1:5000/data/').then(response => response.json()).then(json => {\n      setComponents(json.components);\n    }).catch(err => console.error('Error fetching data', err));\n  }, []);\n\n  // render page layout\n  const renderPage = page => {\n    const ly = page.layout;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        height: '100vh',\n        display: ly.display,\n        gridTemplateRows: ly.gridRows,\n        gridTemplateColumns: ly.gridColumns,\n        gridTemplateAreas: `\"${ly.gridAreas.join('\" \"')}\"`\n      },\n      children: ly.components.map((component, index) => {\n        const HTMLTag = component.gridArea || 'div';\n        return /*#__PURE__*/React.createElement(HTMLTag, {\n          key: index,\n          style: {\n            backgroundColor: component.color,\n            gridArea: component.gridArea\n          }\n        }, component.title);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  };\n\n  // render individual UI component \n  const renderComponent = UIcomponent => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: components.filter(component => component.component === 'products').map((component, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap'\n        },\n        children: component.data.map((item, i) => {\n          const hasBoolean = Object.values(item).some(value => typeof value === 'boolean');\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: hasBoolean && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: item.selected ? '#c5e0d8' : '#e1edea',\n                width: '250px',\n                height: '150px',\n                margin: '20px',\n                padding: '5px',\n                textAlign: 'center',\n                borderRadius: '5px',\n                cursor: 'pointer'\n              },\n              onClick: () => productClicked(item.id),\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  paddingTop: 'px'\n                },\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: item.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 21\n            }, this)\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this);\n        })\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  };\n\n  // flips only selected value -> returns updated product as JSON\n  const productClicked = productId => {\n    fetch(`http://127.0.0.1:5000/data/products/${productId}`, {\n      method: 'PATCH',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    }) // PATCH: partially update a resource\n    .then(response => response.json()).then(updatedProduct => {\n      // receive updated product in React\n      console.log('product updated:', updatedProduct);\n      // updates component object, React re-renders\n      setComponents(prev => prev.map(component => component.component === 'products' ? {\n        ...component,\n        data: component.data.map(p => p.id === updatedProduct.id ? updatedProduct : p)\n      } : component));\n    }).catch(err => console.error('Error updating product', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: UIschema ? renderPage(UIschema.pages[0]) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 55\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this)\n  // <div>\n  //   {components\n  //     .filter(component => component.component === 'products')\n  //     .map((component, index) => (\n  //       <div key={index} style={{ display: 'flex', flexWrap: 'wrap'}}>\n  //         {component.data.map((item, i) => {\n  //           const hasBoolean = Object.values(item).some(value => typeof value === 'boolean');\n\n  //           return (\n  //             <div key={i}>\n  //               {/* If one of the fields has a boolean data type, it automatically renders to a box */}\n  //               {hasBoolean && (\n  //                 <div style={{ backgroundColor: item.selected ? '#c5e0d8' : '#e1edea', width: '250px', height: '150px', margin: '20px', padding: '5px', textAlign: 'center', borderRadius: '5px', cursor: 'pointer'}}\n  //                   onClick={() => productClicked(item.id)}\n  //                 >\n  //                   <p style={{ paddingTop: 'px'}}>{item.name}</p>\n  //                   <p>{item.price}</p>\n  //                 </div>\n  //               )}\n  //             </div>\n  //           )\n  //         })}\n  //       </div>\n  //     ))\n  //   }\n  // </div>\n  ;\n}\n_s(App, \"dJ/SkzQRhhJWXPgal0YD1tTe1zU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","UIschema","setUIschema","components","setComponents","fetch","then","response","json","catch","err","console","error","renderPage","page","ly","layout","style","height","display","gridTemplateRows","gridRows","gridTemplateColumns","gridColumns","gridTemplateAreas","gridAreas","join","children","map","component","index","HTMLTag","gridArea","createElement","key","backgroundColor","color","title","fileName","_jsxFileName","lineNumber","columnNumber","renderComponent","UIcomponent","filter","flexWrap","data","item","i","hasBoolean","Object","values","some","value","selected","width","margin","padding","textAlign","borderRadius","cursor","onClick","productClicked","id","paddingTop","name","price","productId","method","headers","mode","updatedProduct","log","prev","p","pages","_c","$RefreshReg$"],"sources":["C:/Users/ejy92/Coding/SDUI/Venv/frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n\n  const [UIschema, setUIschema] = useState(null);\n  const [components, setComponents] = useState([]);\n  \n  useEffect(() => {\n    // fetch UI schema\n    fetch('http://127.0.0.1:5000/schema/')\n      .then(response => response.json())\n      .then(json => setUIschema(json));\n\n    // fetch data (products, customers, orders)\n    fetch('http://127.0.0.1:5000/data/')\n      .then(response => response.json())\n      .then(json => {\n        setComponents(json.components);\n      })\n      .catch(err => console.error('Error fetching data', err));\n  }, []);\n\n  // render page layout\n  const renderPage = (page) => {\n    const ly = page.layout;\n    return (\n      <div style={{ \n        height: '100vh', \n        display: ly.display, \n        gridTemplateRows: ly.gridRows, \n        gridTemplateColumns: ly.gridColumns, \n        gridTemplateAreas: `\"${ly.gridAreas.join('\" \"')}\"`\n        }}>\n        {ly.components.map((component, index) => {\n          const HTMLTag =  component.gridArea || 'div';\n          return React.createElement\n            (\n              HTMLTag, \n              {key: index, \n               style: {backgroundColor: component.color, gridArea: component.gridArea}},\n              component.title\n            ); \n        })}\n      </div>\n    )\n\n  }\n\n  // render individual UI component \n  const renderComponent = (UIcomponent) => {\n    return <div>\n      {components\n        .filter(component => component.component === 'products')\n        .map((component, index) => (\n          <div key={index} style={{ display: 'flex', flexWrap: 'wrap'}}>\n            {component.data.map((item, i) => {\n              const hasBoolean = Object.values(item).some(value => typeof value === 'boolean');\n\n              return (\n                <div key={i}>\n                  {/* If one of the fields has a boolean data type, it automatically renders to a box */}\n                  {hasBoolean && (\n                    <div style={{ backgroundColor: item.selected ? '#c5e0d8' : '#e1edea', width: '250px', height: '150px', margin: '20px', padding: '5px', textAlign: 'center', borderRadius: '5px', cursor: 'pointer'}}\n                     onClick={() => productClicked(item.id)}>\n                      <p style={{ paddingTop: 'px'}}>{item.name}</p>\n                      <p>{item.price}</p>\n                    </div>)}\n                </div>);})}\n          </div>))}\n    </div>\n  }\n\n  // flips only selected value -> returns updated product as JSON\n  const productClicked = (productId) => {\n    fetch(`http://127.0.0.1:5000/data/products/${productId}`, {\n      method: 'PATCH',\n      headers: {'Content-Type': 'application/json'}, \n      mode: 'cors'}) // PATCH: partially update a resource\n      .then(response => response.json())\n      .then(updatedProduct => { // receive updated product in React\n        console.log('product updated:', updatedProduct);\n        // updates component object, React re-renders\n        setComponents(prev => \n          prev.map(component =>\n            component.component === 'products' ? {\n              ...component, data: component.data.map(p =>\n                p.id === updatedProduct.id ? updatedProduct : p\n              )\n            } : component\n          )\n        );\n      })\n      .catch(err => console.error('Error updating product', err));\n  }\n\n  return (\n    <div>\n      <div>{UIschema? renderPage(UIschema.pages[0]) : <p>Loading...</p>}</div>\n    </div>\n    // <div>\n    //   {components\n    //     .filter(component => component.component === 'products')\n    //     .map((component, index) => (\n    //       <div key={index} style={{ display: 'flex', flexWrap: 'wrap'}}>\n    //         {component.data.map((item, i) => {\n    //           const hasBoolean = Object.values(item).some(value => typeof value === 'boolean');\n\n    //           return (\n    //             <div key={i}>\n    //               {/* If one of the fields has a boolean data type, it automatically renders to a box */}\n    //               {hasBoolean && (\n    //                 <div style={{ backgroundColor: item.selected ? '#c5e0d8' : '#e1edea', width: '250px', height: '150px', margin: '20px', padding: '5px', textAlign: 'center', borderRadius: '5px', cursor: 'pointer'}}\n    //                   onClick={() => productClicked(item.id)}\n    //                 >\n    //                   <p style={{ paddingTop: 'px'}}>{item.name}</p>\n    //                   <p>{item.price}</p>\n    //                 </div>\n    //               )}\n    //             </div>\n    //           )\n    //         })}\n    //       </div>\n    //     ))\n    //   }\n    // </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}